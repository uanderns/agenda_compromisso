package br.com.cotiinformatica.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import br.com.cotiinformatica.dto.CadastroCompromissoDTO;
import br.com.cotiinformatica.dto.ConsultaCompromissoDTO;
import br.com.cotiinformatica.entities.Compromisso;
import br.com.cotiinformatica.entities.Usuario;
import br.com.cotiinformatica.enums.ModoDeExibicao;
import br.com.cotiinformatica.enums.PrioridadeCompromisso;
import br.com.cotiinformatica.enums.TipoCompromisso;
import br.com.cotiinformatica.services.CompromissoService;
import br.com.cotiinformatica.utils.DateUtil;

@Controller // define a classe como controlador do spring
public class CompromissoController {

	@Autowired // injeção de dependência
	private CompromissoService compromissoService;

	@RequestMapping("/cadastro-compromisso") //abre a view
	public ModelAndView cadastroCompromisso() {
		ModelAndView modelAndView = new ModelAndView("agenda/cadastro-compromisso");
		
		modelAndView.addObject("dto", new CadastroCompromissoDTO());
		modelAndView.addObject("tipos", TipoCompromisso.values());
		modelAndView.addObject("prioridades", PrioridadeCompromisso.values());
		
		return modelAndView;
	}
	
	@RequestMapping(value = "cadastrarCompromisso", method = RequestMethod.POST) //recebe o submit do formulário
	public ModelAndView cadastrarCompromisso(CadastroCompromissoDTO dto, HttpServletRequest request) { 
		ModelAndView modelAndView = new ModelAndView("agenda/cadastro-compromisso");
		
		try {
			
			//Obtendo o usuário da sessão..
			Usuario usuario = (Usuario) request.getSession().getAttribute("usuario_autenticado");
			
			//criando um objeto da classe de entidade Compromisso..
			Compromisso compromisso = new Compromisso();
			
			compromisso.setNome(dto.getNome());
			compromisso.setData(DateUtil.toDate(dto.getData()));
			compromisso.setHora(dto.getHora());
			compromisso.setTipo(dto.getTipo());
			compromisso.setPrioridade(dto.getPrioridade());
			compromisso.setDescricao(dto.getDescricao());
			compromisso.setUsuario(usuario); //associando ao usuario autenticado
			
			compromissoService.createOrUpdate(compromisso);
			
			modelAndView.addObject("mensagem_sucesso", "Compromisso cadastrado com sucesso.");
		}
		catch(Exception e) {
			//definindo mensagem de erro..
			modelAndView.addObject("mensagem_erro", e.getMessage());
		}
		
		modelAndView.addObject("dto", new CadastroCompromissoDTO());
		modelAndView.addObject("tipos", TipoCompromisso.values());
		modelAndView.addObject("prioridades", PrioridadeCompromisso.values());
		
		return modelAndView;
	}	

	@RequestMapping("/consulta-compromisso")
	public ModelAndView consultaCompromisso() {
		ModelAndView modelAndView = new ModelAndView("agenda/consulta-compromisso");
		
		modelAndView.addObject("dto", new ConsultaCompromissoDTO());
		modelAndView.addObject("modoDeExibicao", ModoDeExibicao.values());
		
		return modelAndView;
	}

	@RequestMapping("/edicao-compromisso")
	public ModelAndView edicaoCompromisso() {
		ModelAndView modelAndView = new ModelAndView("agenda/edicao-compromisso");
		return modelAndView;
	}
}


